/* 
  给定范围 [m, n]，其中 0 <= m <= n <= 2147483647，返回此范围内所有数字的按位与（包含 m, n 两端点）。

  示例 1: 

  输入: [5,7]
  输出: 4
  示例 2:

  输入: [0,1]
  输出: 0

  来源：力扣（LeetCode）
  链接：https://leetcode-cn.com/problems/bitwise-and-of-numbers-range
  著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

/**
 * @param {number} m
 * @param {number} n
 * @return {number}
 */
var rangeBitwiseAnd = function(m, n) {
  let num = 0;
  while (m !== n) {
    m >>>= 1;
    n >>>= 1;
    num += 1;
  }
  return m << num;
};

/**
 * 0000 0001 0010 0011 0100 0110
 * 0001 0010 0011 0100 0101 0111
 * —————————————————————————————
 * 0000 0000 0010 0000 0100 0110
 * 
 * 0001
 * 0010
 * 0011
 * 0100
 * ————
 * 0000
 * 
 * 可以看出来，从左往右，只要有一列均不为1，则这一列就是0
 * 本题可以转化思路为找公共前缀，然后补抹去的0
 */